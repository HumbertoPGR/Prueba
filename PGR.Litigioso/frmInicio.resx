<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEoAAAAtCAYAAAAJIf2TAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABeZSURBVGhD7VoHWFTXth6GKcxQhoGhzwy9dxDEGk3s
        vRKVaGJvKBgrYlQ02DWWWNCoWKNRY4kNRURAUUCpoiJNQRBEMZbYgv9b+4CFoLm59+Vd/d69//f9DLPP
        PrP3/mettdfaZ3gA/su/wNo/f0Cnzl1aT502fXbd2/94vFeoU3Hxt+8/eITvlq88O3zEyLBmzVu0q7v0
        H4l3ChX69cRh6RnZiD+TiCtX81BSWo5cel25anV8x06dv5RIJLK6rhw6d+3afsu2HQeCx4VEWFgoPeqa
        /1/hbaH4zVu0tLO1tbNbtnzFiYzMbMSdPgOyLMSeOo0zCUnIyy9EfkERDv5y5ObwEaOW+jcOaDFtevjK
        gsKbuFFyC5VV93A2+cLTceNDlvXu0/crbgQCX0OsKRTo6gmFEm2RUCJlFIukRG0dkVBbKhTqGApFusYS
        LR1R3S0fHV4L5efvb3ouOSWjsOgmEpPOccKcjI3jhHpFJlgcvTJru06ipWfm4GpeAc4lX0BC4lkknU1G
        Tu4V3KmqRuWdexg+fOTa2mF0fcx0R99VGY+osFEOL7KzGlvkaDehWKY97IaVavpNb8+VcHFd/Nzbe941
        V9eJh0yMPfrU3vfx4LVQMplM28LCouekSVPOHTl6HKfjE15b1LvIrjFhXjH5fAoupKQhJfUiUolXyVVf
        0gcHft53KY1jxePJQrQ1W95QySdBaRwCY4MQhIbsQqeOo++bGLe97Ok+H66ua+Hjuw0tWu6DmanP5Nop
        fhx4LRRBg2vh8aTEbvt+PnD3UnrmO0ViPB2fyFne2XPncf5CKidQ2sV0XLyUQRaXyfFy7lXkXsnDvp/3
        Zx2J2bY7qF/weaFG1xp9YX/oi79AWVkVFi+bkkrj+errmY9xdZ5b4+gwBx6eG+HtNe2hQJPnz83oD9DU
        5PP4fL5AQ6OWQur4f423hXoNDT6fd+RYTClb/LtEijudwLkaE4lZEut3kURiwrLYlpWdg+ycy8jMukwx
        rRB3792nIYC9P52hgVq/FPE6Q0+zD86dy0Hi2bjHNOSnbFy1Rd/TTg4L4eS4AC5OU0DrH8vaGUQiPT25
        rs8gU6Nu22xU47PsrcN/dXaMeODiPO+xu9u8Yju70UfV6h6zjYw824lEYu262/42NBCKdjRej569u1D8
        +Y25X0OhznDx65W7vRIpnUTKzMrmBMq5fKXOmq7RrsmYhweP7yB60zEIeD2hxetG7Iz9+0/R0C/h4eHB
        3JOnNO2y1t56NuxsIuDsEMom1YtPdq4v8Q02kvYrU8vDYGcxB/ZWwVBbBEJl3vOupSqw2sV5Evwa/YCA
        gMPwD9hD1jjlglgksGOf+XehgVC0i4XQwp4zMVjwflukWOIrl2MBnMUk5m7MkmpFyiWBrnDiXL2Wh2t5
        15F3PZ/j4yd3sXXrSUj5QZAJB0CX3xv79p6koYGo9etv0NByuXabXZamE2FvGQmlWdt8vibvM5VRr70W
        uuNgKBgKE51AyHXtk7XEgvnUvy/Rj+glEPA6yfRMwmwsA3O8vLbCyWkCW1AH4t+GekJJtbVFa9ZGnS4q
        vtlgx2O7Xa010e52rtaaUtMucTGJuRuzpFciMYGu5xdwbldQWMSlFE+f3cPOnaehJxkOQ71hkGkF4fix
        JBr6ObEGfXoPPMLjNakwlgbD1iIYujqiFSqztvG2qgiYGwbD0mgItMTa+2ma3YjmxHcFJqWzY3i1s9NX
        D7VEhqFioaq1ltjUV6Jl1lgqMScqG0sk6qZaEss2EqlVW6nUqo2+zMFfKtE1qLv/vagnVP8BQQOLikso
        Br0R6BW51IBckcWmt60pPSMLmRSTmLu9LRITqLCoGEXFNzg+f3Efu3cnQi4bDxPFODjaTsCa7w9iRlg0
        JoZsgIX+cJpEMxiK+9RIxQb7DA2tVnq4roKlaiIcrGdBIXfOoCn2IIq5yb4HjrYhl+xsupcqFc3PWhpO
        gJXpBFgrJ8DWcgqNOQveHsvg4/U9uedGuHusg6/vOvg1XnvbxqbbQg0NnrDuYxqgnlBBQQODS0rLGloT
        pQIU3GvOkRVl51zh4hLb6WqtKYtzudwrV8nd3ojExCm+QYnozRKOL2p+xd69yTBSTIG52WQK1tOxc0cs
        unWaB32tQfi06WyMG7HiBU1jK9Hf1SU00c1tNRzsI2FvG/yS3GsBtZuxef4Z9PWsu4uEejP5GoJeOhKj
        WRb6QTCTjYLSiMRSf/XCWOEQozBw2qY0b3nC030OuekSuLl/j+YtD8HCvMl39BGvdv96qCeUnb1DwMVL
        mVwM+qNQp88kvly7bv3dY8dPvCi+UUJlTRmXLzG3Y9bEAjezJuZuzJKYSDdLSlF6q4zjSzyg4J0GM4sI
        qNXfQGk+FWfOXKL2ak7k0rIbNI2nGB869BBNxdfTe0W5m8dKeHqug611nzJq681N8q9Bj8jn/hG0zDYS
        D4apzlhYmnWqoCZWMRgTRSYKu3AP14Wwt59J4/wAZ+dRFbThe7L7/oh6QjFQEZxcdrsSJ07G1hPr2vVC
        hE6YWERd5nXo0HFjTEzsw9+ePOOsiZHtbCxov7ImZkVMoLKyco7AQxw4cAkW6kWwsV8IW9u5iIlJwf0H
        ZSgoKqD4Vrtb3q4oxuhR35xRq+c+dPP8ntxiB/XtnE3jNucm+E9CrtU23kj8JeT8gTCTt6kSCHlvZ/0a
        VqpB+fZ2cyklWQpHh2H3NTV5vequ1UMDoRwcHNuw/IcF6rddMOnseSpPrpGpOnNbOev6/eo1qTWUfj96
        /PS1Rb0S6pU1lZWX43b5bRriMVlUCszM58DWgSblvAyxsZdQda+EEygzK4eLeeUVRTh6JAUqZfhLB6cF
        8AvYBUvrDmk0Htvh/mmYyLudVsrHQiEaDBNZ6ypNIe/zukscTBQ9Um3V4XB1+o5CQptiampbe6U+GgjF
        0KZt28hfHzzm6jkWj5grnjh5ilsM7XYvZs2es4MK6LYisbh50BeDNmzaFF1Zeafq3RZFQpUTa4W6ACOj
        KbC0otjgvASnTqVTXfhGKJZmFBVfxY87T0BlMRXW1jPg47MRDg69s2hajWtn9wYaLPoKtHgioZCoWUc+
        TyDQ1NTg1abr5iZ9460tpsBCPo7iVMcqvuCNUBKxzFCtGPWbUjEZTjaToadrtIuaXWqv1sc7hSJojxo9
        9sDGTdHVx2NiOeu6lpfP5VEsgFfdraZbgLnfRh6gvjbEHiwm3au+z4lVWFQbyEtK38QoFn9+3ncO+pQT
        KZXTYEM7WXx8Ou7dv1UnVDYJlUHjXMbRo/Gwsfwa5pRTubqsgJ1tEItRrdjE3oZEYqTn5TE/x9drQbmL
        4+SrtpaDU21Ug86rTYbkWpt+dVksEnuamvQ8bm8zG1bm02Bp0fM+heqO7F6+hibPQKvNYROt8bA2HgGZ
        ruo8NQcS35nVcxpxfxqC1Xw9DA0Vs52cHL6bOWtGakFRHq5cyyBLy6JbnpOFbL8vldbGjg4dWwY9//23
        FxWV5SRSbUrAgn5BYTG51x3qT4nl2qPg8wZCrZwEfdkEHDyYTK2/UZ/r9GVkcF9CekY6xbx0NPOfBrFg
        MAXyb+DmGvZSoiUawcZ5GwJNsUim5zFHrWp3ysXpazjYLSGBZ1E6EEaJqUuGJp/fxlL9ZZyz4yLYWkXA
        Wt35qpXSO0pl+vkWE70+uWZSckmdZkUSLUk0fRyLXe/Np2ii7xXqj3BbtGh1NnOXXbtPY/OWmKf+/l1z
        xFrqmWKx2sPM1KV9amr2k9sVt1FdXYYXv9/F7zXM8l4g/nQKmjedBG1+PxqoC3EAMQiWyon4tNUi7NgR
        Ry5agLS0dC7tKC2/jmmT11KfbrA0HQtn+wUkbvNjdfN4JwwM3CK9PNeSm1I6YRPCFjSNqG1nO/qku/tK
        ONrTJmLdPdvCzGGri91CqEymQmU0HmaKFqwqYFYmIL4X7xVKW6rQUhh6t7Yw7xpmpR65R09veJYGb1il
        SDSJOrMSYVQNjzfxpVyxADKDhbTtf0ecDxu7eWjTdjVGjd6JlStPkEsV4NjRJHwRNBeRs6MRvfEwJZoH
        MD9yN0YMi0L7douxY+cpCv7Mqi5xGX96BmX86alwsmRJaFeojUNgpQxBYN+B61p/5t+ibor1oK3rNtCn
        UTRcXJfC1XkahAJBMGt3cJxw3Md3E1xdv4ez4xCWHrSxMAtY6eq4BEr6EmwtpsNQ5hjF+v4ZGghlaODq
        62A3ZrPKYsotHe1vqJSYC0vLRWj1yXr07bMFIRMOIHJ+HNb8cBHb9xdi+6Eb2HbgBlZFX0PYt+cwZOwR
        tGoTTYItgZ7eDAiFk+DoGIkxY35C9NZESgVYvvSY+IL4AE+fV1Cimovk5DQu22dZf/yZJEpHsimTPwhD
        3X6Q8PtDTzQUPbtG0caSgXYdAr6om+5rWKo7jPBvugce3uupyF5EQgknsXYHx9CYRo13wtMnGh7uY+5Q
        U2dKAXTcXELyHOzm0xcwlWrLEIhFIlY7vhcNhFIYOreyUi+mvGIhhg7egs1bLyCz6BGeUad/BjXEQmLM
        lWeYtSYL7XvvghVNzEB/CgXnGQgasBabN8cgNzcHd+8V4WbpNbKii9ypBBPqZGw8CoovY8vmXc+M9Ds9
        N5QMgYA3GI6W09G65fh7hnK3MGOFayuFoU8nc7MuER7ui6t8fHegWYsD8PFdDD5fNJGtx9Zm1HFv343w
        arQdXt6hVQI+F7B5+jJVB2/PFbC1CafSZj7Frx751GzBrr0LtJT6QjGMHD47ppLVqq/xEC/S4nFv/Rrc
        +joEJf0CUdqmI24FBKDc1weVjXxxr7Effm3VCvc7d8ejEYPwYu50YM8mICeONrxS+owa2veAFIrrkVuv
        4dNeP0JFAdZKPRVdOi/G8uX7KBVJwY0SqhtzL+JMYgKJmIdNW9ZVSrQEc6Vim52meh1v6wv7wVh7PNzt
        FsDHbSm83JbDy30F3FxmUKnzRYWFeYsUbW1D5kqci1pZDj7p7raC6rooyr6D71DS8Do9sLfrd8jTYwOJ
        NR3uLkthrHi/C9LUGwq1bt/e9cAT3Fq3Crk9eyDdygZpGiJcpK6ZxMs8Pq7xtFDI18NNoRy3NGWoIN7h
        6aCcJ0ApXafMDQXE6/T+ulyBG77euDt4ALBtFZB/lsSrQNnD59ieUImgyXFw819BgTgc7dt+i/nzt5GL
        JeDZi7v4YdPqapoSO9gT8DV5TcVC3Sk6EvN1Cn2XowoD93h9mc0hbYliDe2KYdQniNiUqCRyMDftl+Ti
        tJjKkxWUagxlrte19gqPp6UltfbzW/7c1XUZZeUL4ek2C1piUc+6y/XQUCiRiLe+Q6fEEkcnnKZLScQU
        kRzpChWy5ErkiA1IKDGuciLwSBA+CSNCBbVVknjl9MreF/M0UUjX84i5RKpBkE5MrWO2UoXbA3oB21cC
        1y/g3u0yHDxbirHzz6NZl83w8JmDYcM2Ycjg8Ac0q/a1k3sNlrowN7GtowlRl/i6+tfQ4PN0tE2U1srR
        FbaW4eTu31IhHvJMpisbKxQKXxe+anWr2Y2b7IGz6wJ4eqyn3XHYTalE6kq5bD00EMrBzMw1W2GGZFr0
        BRNLXNA1pv95uEDMEElx1dEZNzp1RNWEUDxaPg/YFw0kHAcuJgHp54BLZC3nT1Fw2g38tA4vl0XiUeho
        3O7aHkWeXsjRN+CEOkuMJ54iJhAve7vh4YyxwMldqM68iMMnLmPq8lR0H37opdppMhmn3yIqcQPqpvmn
        4PM1eKZ63bZaGX0NK5OJlGKEwEY1BQ6UePp6LicX7X+YurHCmR0VCBs1mlPk3/QgbQRR8PP7Eb4+kRCL
        des98G0gVJi1zeYKM1tagIizqPN6+rjSuTMqViwFrqVSV7ZbvQEL8pXEYiIL3kV1r/lUA5bQaxWRxaZa
        UOD7la7mJgA/rsWDr0ei4NPmSJMb4iSNdaiOCSIhSvp2wrP1C1AdexSZybS7Hq3CmMhLcG+1KFsg7UT1
        pik7wXxnFs1KG22xdahQQ/2TkG+yRSw026olMt8qFim3SiVu+3V0bLZTn9e1o46O0adyufcPOroOO7W1
        bbfwhHY7qbmZvlRX39bYlHNjmnzdH4JCLjc6LtJ5yr7t825uuDEvAqi4zi2RgaWP8RcrsSoqFeNDjqJP
        371o024vmjTZCQ+v7XDz3EE7yzZ4em+h95vRyC8aTZtuR7uO+xE05BTGhaVhYXQZNsU+QCKpmFf9Evcf
        PgDK8ynKH0PNhgWoGPY5Llpb4heaA82We811tMKjqSPx6Mdo5J1IwS9HivBt1BV0G72v1Mp/yg6esOlI
        Hk/mRUt43wNU5kjMLbWITFyWgcuJ74SDkZ7H2FZtZ4Z37b20sZ0TO1HVoaW/EcpbIu5S2JR2si0Uy+vA
        io/obakYNHA7vL1Ww9RkGWSySOjLp8PEZEKNgWHQPbV6wA2lqnuujm6TZH2ZX4y+fqNj+rJGx/V0fY4L
        RT4npdLmZ+X6Xa6KRZ1LKJbe0dMZ9lRhEApnlwXwb7EO7QfswfhFKVhzqBBxaSUozr6Cx+di8eynKNwP
        G4O8Rm44Q9M8QWRuW9bYFfdDhqJs5Tqkb4vD/p2ZmLfyLL6advC6f+/5e8wajZjOkwX04IkdHXk8sQ63
        uHdB04j81FCTr6tSNLH1aRne4fPJ6weN+zFqUHDM0BZttxtqa7NUgsVAPZLhjVABrm59mDgMmdfvYULI
        bspmF0MqmUOVdRiUFmOeqlXdC81MvWP1ZSYbpBJRON3Gdhrmz58Q2e8O1ERV3SsjO99mT0SaEdsQO9B9
        QzT5klCpxPzb0NCV1SHjt1ApMxc+3jPh7jkHTdquQc+RBzFuYTJWbKdsPbEQpUlpqP55Nx4unIW7gZ1Q
        Ym+OQm0ebisEeORrhfsdWqByyAjkfz0P56dH4eewDdg4ZefLiDFr70weuihn6silSf3bjTwc2DTwp7Gt
        +++e1/6LI3sGTspIGDO7Kmfad0idugqbB4X8PiCgRRJPU8DqSjZn7oCPWN/1vPwa+2cXPEHw2F1QGMyk
        bDWcxBn/0tqqS76B3GqPUMDVT2z7ZIIwAVhA/JefPjo6WTUpvnnlYVFxNh4+qkDprSL8cvg41q7dg8mT
        ojCg31K0bh0BudmXlb7tlj4bMecsItZfxY+Hb+LEoTyk7UlE3ob9KP92Me6MCEZV9/Z43uMzoE87YEwP
        IHQgMHEwMHMcsHgOJXBLgCWrgWUb8es3K5A6bhqiB4xEUONPr8nkFutpSgOI7ISTHTnXW1c9oYQC2i2M
        A08aypfB2nLUM5UyII3yk2V0iR3DOhPZr1j+sHH+axAIhbzwGTO/LyuvZAeDLwM/75c+c9bsW4+fPEZe
        /mVk5VxAfmEmd5Dn18grjm4JoawggkILVfqepzS0P0u3D5hY2KTX0uqOwzc+GTX3WM20hccxd0kMFi84
        gnUL9mLD3O1YE7ockUMXIrTnlOfjA8Pu9uwwotDbr/t5uX3Tn3m6atpJuaPhlkRmQSzFeCfqCVULLXel
        ecAOSqeYQCw5Y+7ztz+zDgufMZWdjMaeisOVq9cpa/Y6Ss3dQkJCf0pIrH1Uz05YM7Ky6fXUEyMjOXNx
        dg7OYo4VkX1x7IiHHd2ybHs0fdVzKSbNpzVE0pqJ+vN4PCOiDvtB3DgiizksJ2tEfOVaLMD/Q7xDKA76
        RCbQex/f/G/Rrn2HwPMX0rizdna0kp6ZjeBx49kJo5OLi1tEzuWrSEhIorovgTtp9fL22UDX/mxR7Mtk
        OxoT8hVfvWch4i8J8j68T6h/C8zNLfolJiX/zn6kxp7qMHTp2m0jXRLMiphziFnarbLb3G8d9PRkrA5j
        cfGD4IMKxWBoaNjHv3HjqB49e8WcS06pCfpiIDuSNYxa/8OZu/d+xfwFi27b2zuwQ7tBRGYdHwQfXKg6
        MLcw5/P5/XV0dL/i8zWtNkdvO3n02Ak2MeZy7CTgvQnivwMfi1Bv49Ujc9EnrVqvmx0xN0NLS8unru2D
        4WMUqh6+GjxklY+PLztC4Z78fih89EI1bdrsk/79g1i+w1X7HwofvVBKpcqEgjn7FQsriz4YPnqh6sDy
        oY/Dov7Lf0Tw/ge9jNujTCX6HgAAAABJRU5ErkJggg==
</value>
  </data>
</root>